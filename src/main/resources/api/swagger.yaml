swagger: "2.0"
info:
  description: "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters."
  version: "1.0.0"
  title: "Swagger petstore"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "petstore.swagger.io"
basePath: "/v2"
tags:
  - name: "student"
    description: "Everything about your students"
    externalDocs:
      description: "Find out more"
      url: "http://swagger.io"
  - name: "school"
    description: "Everything about your students"
    externalDocs:
      description: "Find out more about our store"
      url: "http://swagger.io"
schemes:
  - "https"
  - "http"
paths:
  /student:
    get:
      tags:
        - "student"
      summary: "Get all student"
      description: ""
      operationId: "getAllStudent"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: ""
          description: "Student list"
          required: true
          schema:
            $ref: "#/definitions/Student"
      responses:
        405:
          description: "Invalid input"
    post:
      tags:
        - "student"
      summary: "Add a new student to the store"
      description: ""
      operationId: "addStudent"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Student object that needs to be added to the store"
          required: true
          schema:
            $ref: "#/definitions/Student"
      responses:
        405:
          description: "Invalid input"
    put:
      tags:
        - "student"
      summary: "Update an existing student"
      description: ""
      operationId: "updateStudent"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Student object that needs to be added to the store"
          required: true
          schema:
            $ref: "#/definitions/Student"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Student not found"
        405:
          description: "Validation exception"


  /student/{studentId}:
    get:
      tags:
        - "student"
      summary: "Find student by ID"
      description: "Returns a single student"
      operationId: "getStudentById"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "studentId"
          in: "path"
          description: "ID of student to return"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Student"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Student not found"


    post:
      tags:
        - "student"
      summary: "Update an existing student"
      description: ""
      operationId: "updateOneStudent"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "studentId"
          in: "path"
          description: "ID of student that needs to be updated"
          required: true
          type: "integer"
          format: "int64"
        - in: "body"
          name: "body"
          description: "Student object that needs to be added to the store"
          required: false
          schema:
            $ref: "#/definitions/Student"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Student not found"
        405:
          description: "Validation exception"

    delete:
      tags:
        - "student"
      summary: "Deletes a student"
      description: ""
      operationId: "deleteStudent"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "api_key"
          in: "header"
          required: false
          type: "string"
        - name: "studentId"
          in: "path"
          description: "Student id to delete"
          required: true
          type: "integer"
          format: "int64"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Student not found"
        405:
          description: "Validation exception"

  /student/{studentId}/school/{schoolId}:
    get:
      tags:
        - "student"
      summary: "Find student by ID"
      description: "Returns a single school"
      operationId: "getSchoolById"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "schoolId"
          in: "path"
          description: "ID of student to return"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/School"
        400:
          description: "Invalid ID supplied"
        404:
          description: "School not found"


securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:students: "modify students in your account"
      read:students: "read your students"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Student:
    type: "object"
    required:
      - id
      - firstname
      - lastname
      - age
      - address
    properties:
      id:
        type: "integer"
        format: "int64"
      firstname:
        type: "string"
      lastname:
        type: "string"
      age:
        type: "integer"
        format: "int32"
      address:
        type: "string"
    xml:
      name: "Student"
  School:
    type: "object"
    required:
      - id
      - schoolname
    properties:
      schoolname:
        type: "string"
      preis:
        type: "integer"
        format: "int32"
      address:
        type: "string"
    xml:
      name: "School"
externalDocs:
    description: "Find out more about Swagger"
    url: "http://swagger.io"
